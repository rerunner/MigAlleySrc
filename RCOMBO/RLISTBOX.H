// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CRListBox wrapper class

class CRListBox : public CWnd
{
protected:
	DECLARE_DYNCREATE(CRListBox)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x48814009, 0x65ae, 0x11d1, { 0xa1, 0xf0, 0x44, 0x45, 0x53, 0x54, 0x0, 0x0 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	BOOL GetIsStripey();
	void SetIsStripey(BOOL);
	OLE_COLOR GetForeColor();
	void SetForeColor(OLE_COLOR);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	unsigned long GetStripeColor();
	void SetStripeColor(unsigned long);
	unsigned long GetSelectColor();
	void SetSelectColor(unsigned long);
	BOOL GetLines();
	void SetLines(BOOL);
	unsigned long GetLineColor();
	void SetLineColor(unsigned long);
	unsigned long GetDarkStripeColor();
	void SetDarkStripeColor(unsigned long);
	unsigned long GetDarkBackColor();
	void SetDarkBackColor(unsigned long);
	BOOL GetLockLeftColumn();
	void SetLockLeftColumn(BOOL);
	BOOL GetLockTopRow();
	void SetLockTopRow(BOOL);
	unsigned long GetLockColor();
	void SetLockColor(unsigned long);
	BOOL GetDragAndDrop();
	void SetDragAndDrop(BOOL);
	long GetFontNum();
	void SetFontNum(long);
	BOOL GetBlackboard();
	void SetBlackboard(BOOL);
	long GetFontNum2();
	void SetFontNum2(long);
	BOOL GetLines2();
	void SetLines2(BOOL);
	unsigned long GetHeaderColor();
	void SetHeaderColor(unsigned long);
	BOOL GetSelectWholeRows();
	void SetSelectWholeRows(BOOL);
	long GetFontPtr();
	void SetFontPtr(long);
	long GetParentPointer();
	void SetParentPointer(long);
	long GetHilightRow();
	void SetHilightRow(long);
	long GetHilightCol();
	void SetHilightCol(long);
	BOOL GetBorder();
	void SetBorder(BOOL);
	BOOL GetCentred();
	void SetCentred(BOOL);
	long GetHorzSeperation();
	void SetHorzSeperation(long);
	long GetVertSeperation();
	void SetVertSeperation(long);
	BOOL GetToggleResizableColumns();
	void SetToggleResizableColumns(BOOL);
	short GetScrlBarOffset();
	void SetScrlBarOffset(short);
	unsigned long GetShadowSelectColour();
	void SetShadowSelectColour(unsigned long);
	unsigned long GetShadowLineColor();
	void SetShadowLineColor(unsigned long);
	BOOL GetDrawBackgGound();
	void SetDrawBackgGound(BOOL);

// Operations
public:
	short GetCount();
	void AddString(LPCTSTR text, short index);
	void DeleteString(short row, short column);
	void Clear();
	void AddColumn(long width);
	void SetColumnWidth(short index, long width);
	void AddPlayerNum(long playerNum);
	long DeletePlayerNum(short row);
	long ReplacePlayerNum(long playerNum, short row);
	void ReplaceString(LPCTSTR text, short row, short col);
	long GetString(short row, short col);
	long GetPlayerNum(short row);
	short GetRowFromY(long y);
	void UpdateScrollBar();
	long GetListHeight();
	void ResizeToFit();
	long GetColumnWidth(long col);
	void SetNumberOfRows(long rows);
	void InsertRow(long row);
	void DeleteRow(long row);
	void Shrink();
	BOOL SelectRecentlyFired();
	void AddIconColumn(long width);
	void AddIcon(long filenum, short index);
	void SetHorizontalOption(short columns);
	short GetColFromX(long x);
	long GetRowColPlayerNum(long row, long col);
	void SetColumnRightAligned(long index, BOOL bNewVal);
	void SetRowColour(long row, long RGBcolour);
	void SetIcon(long filenum, short row, short column);
};
